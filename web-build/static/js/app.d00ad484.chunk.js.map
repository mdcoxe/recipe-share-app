{"version":3,"sources":["assets/images/scrumprectlogo.png","components/Home/styles.js","components/StyledButton/styles.js","components/StyledButton/index.js","components/Home/index.js","components/Login/styles.js","components/UserForm/styles.js","components/UserForm/index.js","components/Login/index.js","components/Feed/styles.js","components/RecipeCard/styles.js","components/RecipeCard/index.js","components/Feed/index.js","components/Register/styles.js","components/Register/index.js","components/CreateRecipe/styles.js","components/CreateRecipe/index.js","components/EditRecipe/styles.js","components/EditRecipe/index.js","components/RecipeShow/styles.js","components/RecipeShow/index.js","App.js"],"names":["module","exports","styles","StyleSheet","create","container","backgroundColor","justifyContent","alignItems","width","height","padding","margin","logo","title","color","fontSize","top","textAlign","subtitle","text","image","alignSelf","resizeMode","button","zIndex","elevation","fontWeight","textTransform","StyledButton","props","useNavigation","type","content","onPress","textColor","View","style","Button","mode","Text","Home","navigation","Image","source","require","navigate","userForm","marginTop","marginBottom","marginHorizontal","UserForm","TextInput","borderColor","borderWidth","secureTextEntry","Login","flex","cardImage","card","marginVertical","RecipeCard","recipeCard","description","servings","prep","cook","_id","Card","Title","titleStyle","subtitleStyle","subtitleNumberOfLines","Content","Paragraph","id","Feed","isFocused","useIsFocused","useState","recipeCards","setRecipeCard","useEffect","a","async","fetch","response","json","console","log","getFeed","FlatList","data","key","renderItem","item","showsVerticalScrollIndicator","snapToAlignment","declerationRate","snapToInterval","Dimensions","get","keyExtractor","index","toString","Register","StatusBar","inputStyle","theme","colors","primary","CreateRecipe","setTitle","setDescription","img","setServings","creator","setCreator","setPrep","setCook","temp","setTemp","directions","setDirections","label","value","onChangeText","keyboardType","multiline","numberOfLines","icon","event","body","JSON","stringify","method","headers","goBack","submitData","EditRecipe","route","setImg","setRecipe","params","url","res","fetchRecipe","deleteRecipe","Show","recipe","Stack","createStackNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","name","component"],"mappings":"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","file":"static/js/app.d00ad484.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scrumprectlogo.f2f159f0.png\";","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#5D0C1D',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        padding: 10,\n        margin: 0,\n    },\n    logo: {\n        width: '85%',\n    },\n    title: {\n        color: '#f2a22c',\n        fontSize: 40,\n        top: 0,\n        textAlign: 'center',\n    },\n    subtitle: {\n        color: '#f2a22c',\n    },\n    text: {\n        color: '#f2a22c',\n        textAlign: 'center',\n    },\n    image: {\n        alignSelf: 'center',\n        height: '80%' | 250,\n        width:  '80%',\n        resizeMode: 'center'\n    },\n})\n\nexport default styles;","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n   container: {\n      width: '100%',\n      padding: 10,\n   },\n   button: {\n      height: 40,\n      justifyContent: 'center',\n      alignSelf: 'center',\n      width: '75%',\n      // borderRadius: 20,\n      zIndex: 100,\n      elevation: 10\n   },\n   text: {\n      fontSize: 12,\n      fontWeight: 'bold',\n      textTransform: 'uppercase',\n      textAlign: 'center',\n   }\n});\n\nexport default styles;","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport styles from './styles';\nimport { useNavigation } from '@react-navigation/native';\n\nconst StyledButton = (props) => {\n    const navigation = useNavigation();\n    const { type, content, onPress} = props;\n    const backgroundColor = type === 'primary' ? 'white' : '#f2a22c';\n    const textColor = type === 'primary' ? '#5D0C1D' : 'white';\n\n    return (\n        <View style={styles.container}>\n            <Button\n                mode=\"contained\"\n                title={content} \n                style={[styles.button, {backgroundColor: backgroundColor}]}\n                onPress={() => { onPress()}}\n                >\n                <Text style={[styles.text, {color: textColor}]}> {content}</Text>\n            </Button>\n        </View>\n    )\n};\n\nexport default StyledButton;","\nimport * as React from 'react';\nimport { Text, View, Image} from 'react-native';\nimport styles from './styles';\nimport StyledButton from '../StyledButton';\n\nexport default function Home({ navigation }) {\n    return (\n        <View style={styles.container}>\n            <View style={styles.logo}>\n                <Image style={styles.image} source={require('../../assets/images/scrumprectlogo.png')} />\n            </View>\n            <Text style={styles.title}>Welcome to Scrumptious</Text>\n            <Text style={styles.text}>Click the 'Browse Recipe' button below to browse through the community cook-book.</Text>\n            <StyledButton \n                type=\"primary\"\n                onPress={() => {navigation.navigate('Feed')}}\n                content=\"Browse Recipes\"\n                />\n            <Text style={styles.text}> To create, edit, delete, or save a recipe, sign-up or login to your account</Text>\n            <StyledButton \n                type=\"seconday\"\n                onPress={() => {navigation.navigate('Login')}}\n                content=\"Login\"\n                />\n            <StyledButton \n                type=\"seconday\"\n                onPress={() => {navigation.navigate('Register')}}\n                content=\"Register\"\n                />\n        </View>\n    )\n};\n\n","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#5D0C1D',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        padding: 10,\n        margin: 0,\n    },\n    logo: {\n        width: '85%',\n    },\n    title: {\n        color: '#f2a22c',\n        fontSize: 40,\n        top: 0,\n    },\n    subtitle: {\n        color: '#f2a22c',\n    },\n    text: {\n        color: '#f2a22c',\n        textAlign: 'center',\n    },\n    image: {\n        alignSelf: 'center',\n        height: '80%' | 250,\n        width:  '80%',\n        resizeMode: 'center'\n    },\n   \n\n})\n\nexport default styles;","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    text: {\n        color: '#f2a22c',\n        textAlign: 'center',\n    },\n    userForm: {\n        alignSelf: 'center',\n        marginTop: 15,\n        marginBottom: 15,\n        marginHorizontal: 'auto',\n    }\n})\n\nexport default styles;","import React from 'react';\nimport { Text, View, TextInput } from 'react-native';\nimport styles from './styles';\n\nconst UserForm = () => {\n  return (\n        <View style={styles.userForm}>\n            <Text style={styles.text}>Username: </Text>\n            <TextInput\n                style={{ height: 40, width: 300 | '80%', backgroundColor: 'white', borderColor: 'gray', borderWidth: 1 }}\n                // onChangeText={text => onChangeText(text)}\n                // value={value}\n            />\n            <Text style={styles.text}>Password: </Text>\n            <TextInput\n                style={{height: 40, width: 300 | '80%',  backgroundColor: 'white', borderColor: 'gray', borderWidth: 1 }}\n                // onChangeText={text => onChangeText(text)}\n                // value={value}\n                secureTextEntry={true}\n            />\n        </View>\n    )\n};\n\nexport default UserForm;\n","import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Image, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport styles from './styles';\nimport UserForm from '../UserForm';\nimport StyledButton from '../StyledButton';\n\n\n\n\nconst Login = ({ navigation }) => {\n    // const [value, onChangeText] = useState('Enter login info') \n    const handlePress = () => {\n        \n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.logo}>\n                <Image style={styles.image} source={require('../../assets/images/scrumprectlogo.png')} />\n            </View>\n            <Text style={styles.title}>Welcome Back!!</Text>\n            <Text style={styles.text}> To create, edit, delete, or save a recipe, please login to your account, if you don't have an account please click on register\n            </Text>\n            <UserForm />\n{/* Do I need to include the first button in the form to handle press or can it operate from here?  both register and login components */}\n            <StyledButton \n                type=\"secondary\"\n                onPress={() => {handlePress()}}\n                content=\"Login\"\n                />\n            <StyledButton \n                type=\"primary\"\n                onPress={() => {navigation.navigate('Register')}}\n                content=\"Register\"\n                />\n        </View>\n    )\n}\n\nexport default Login;\n\n","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#5D0C1D',\n        flex:1\n    },\n    title: {\n        color: '#f2a22c',\n        textAlign: 'center',\n        fontWeight: '600',\n        fontSize: 25,\n        padding: 10,\n        \n    },\n\n \n})\n\nexport default styles;","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create ({\n    cardImage: {\n        alignSelf: 'center',\n        height: '80%' | 250,\n        width:  '80%',\n        resizeMode: 'center'\n    },  \n    card:{\n        alignSelf: 'center',\n        marginVertical: 5,\n        width: '95%',\n        elevation: 10,\n    },\n    content: {\n        \n    }\n});\n\nexport default styles;","import * as React from 'react';\nimport { Card, Paragraph } from 'react-native-paper';\nimport styles from './styles'\nimport StyledButton from '../StyledButton';\nimport { useNavigation } from '@react-navigation/native';\n\nconst RecipeCard = (props) => {\n    const navigation = useNavigation();\n    const { title, description, servings, prep, cook, _id} = props.recipeCard;\n\n    return (\n        <Card style={styles.card} >\n            <Card.Title\n                title={title}\n                titleStyle={{textTransform: 'capitalize', fontSize: 20}}\n                subtitle={description}\n                subtitleStyle={{fontSize: 14}}\n                subtitleNumberOfLines={3}\n                /> \n            <Card.Content style={styles.content}>\n                <Paragraph>\n                    Prep time: {prep}\n                </Paragraph>\n                <Paragraph>\n                    Cook Time: {cook}\n                </Paragraph>\n                <Paragraph>\n                    Number of Servings: {servings}\n                </Paragraph>\n                <StyledButton \n                    type=\"xxx\"\n                    onPress={() => {navigation.navigate('ViewRecipe', { id: _id})}}\n                    content=\"View Recipe\"\n                />\n            </Card.Content>\n        </Card>\n    )\n};\n\nexport default RecipeCard;","import React, { useState, useEffect, useCallback } from 'react';\nimport { Text, View, FlatList, Dimensions } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport styles from './styles';\nimport StyledButton from '../StyledButton';\nimport RecipeCard from '../RecipeCard';\n\n //For ios and web testing\n    // const url = 'http://127.0.0.1:3010/recipe/';\n    // for android testing\n    const url = 'http://10.0.2.2:3010/recipe/'\n\n\nconst Feed = ({ navigation }) => {\n    const isFocused = useIsFocused();\n\n    const [recipeCards, setRecipeCard] = useState([]);\n\n    const getFeed = async () => {\n        try {\n            const response = await fetch (`${url}`);\n            const json = await response.json();\n            setRecipeCard(json);\n        }\n        catch (error) {\n            console.log(error)\n        }\n    };\n\n    useEffect(() => {\n        getFeed();\n        \n    }, [isFocused]);\n    \n    return (\n        <View style={styles.container}>\n            <Text style ={styles.title}>\n                Scrumptious Recipes\n            </Text>\n            <FlatList\n                data={recipeCards}\n                key={recipeCards._id}\n                renderItem={({item}) => <RecipeCard recipeCard={item} />}\n                showsVerticalScrollIndicator={false}\n                snapToAlignment={'start'}\n                declerationRate={'fast'}\n                snapToInterval={Dimensions.get('window').height}\n                keyExtractor={(item, index) => index.toString()}\n            />\n            <StyledButton \n                type=\"primary\"\n                onPress={() => {navigation.navigate('CreateRecipe')}}\n                content=\"Create Recipe\"\n            />\n        </View>\n    )\n};\n\nexport default Feed;","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#5D0C1D',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        padding: 10,\n        margin: 0,\n    },\n    logo: {\n        width: '85%',\n    },\n    title: {\n        color: '#f2a22c',\n        fontSize: 40,\n        top: 0,\n    },\n    subtitle: {\n        color: '#f2a22c',\n    },\n    text: {\n        color: '#f2a22c',\n        textAlign: 'center',\n        width: '80%',\n        marginTop: 15,\n    },\n    image: {\n        alignSelf: 'center',\n        height: '80%' | 250,\n        width:  '80%',\n        resizeMode: 'center'\n    },\n})\n\nexport default styles;","import React, { useState } from 'react';\nimport { Text, View, TextInput, Image} from 'react-native';\nimport styles from './styles';\nimport UserForm from '../UserForm';\nimport { StatusBar } from 'expo-status-bar';\nimport StyledButton from '../StyledButton';\n\nconst Register = ({ navigation }) => {\n    const [value, onChangeText] = useState('') \n    const handlePress = () => {\n        \n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.logo}>\n                <Image style={styles.image} source={require('../../assets/images/scrumprectlogo.png')} />\n            </View>\n            <Text style={styles.title}>Sign-up here</Text>\n            <Text style={styles.text}> Please sign up so you can save recipes for later, add your own recipes and even come back and fine tune them for future use.\n            </Text>\n            \n            <UserForm />\n\n\n            <StyledButton \n                type=\"secondary\"\n                onPress={() => {handlePress()}}\n                content=\"Register\"\n                />\n            <StyledButton \n                type=\"primary\"\n                onPress={() => {navigation.navigate('Login')}}\n                content=\"Login\"\n                />\n            <StatusBar style=\"auto\" />\n        </View>\n    )\n}\n\nexport default Register;","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#f2a22c',\n        flex: 1,\n    },\n    inputStyle: {\n        margin: 5,\n    }\n})\n\nexport default styles;","import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport styles from './styles'\nimport { Button, TextInput } from 'react-native-paper';\n\nconst CreateRecipe = ({ navigation }) => {\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [img, setImg] = useState('')\n    const [servings, setServings] = useState('')\n    const [creator, setCreator] = useState('') \n    const [prep, setPrep] = useState('')\n    const [cook, setCook] = useState('')\n    const [temp, setTemp] = useState('')\n    const [directions, setDirections] = useState('')\n    \n    const escapePage = () => {\n        navigation.goBack();\n    }\n    const submitData = async (event) => {\n        const body = JSON.stringify({\n            title: title,\n            description: description,\n            img: img,\n            servings: servings,\n            creator: creator,\n            prep: prep,\n            cook: cook,\n            temp, temp,\n            directions: directions\n        })\n        try {\n            const response = await fetch(\n                `http://127.0.0.1:3010/recipe`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/json'\n                    },\n                    body\n                })\n            const data = await response.json();\n            await escapePage();\n        } catch (error) {\n            console.log(error)\n        }\n    };\n    \n    return (\n        <View style={styles.container}>\n            <TextInput \n                label='Recipe Name'\n                value={title}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setTitle(text)}\n                styles={styles.inputStyle}\n            /> \n            <TextInput \n                label='Short Description'\n                value={description}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setDescription(text)}\n                styles={styles.inputStyle}\n            /> \n            <TextInput \n                label='Number of Servings'\n                value={servings}\n                mode=\"outlined\"\n                theme={theme}\n                keyboardType=\"number-pad\"\n                onChangeText={text => setServings(text)}\n                styles={styles.inputStyle}\n            /> \n            <TextInput \n                label='Prep Time'\n                value={prep}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setPrep(text)}\n                styles={styles.inputStyle}\n            /> \n            <TextInput \n                label='Cook Time'\n                value={cook}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setCook(text)}\n                styles={styles.inputStyle}\n            /> \n            <TextInput \n                label='Cook Temp'\n                value={temp}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setTemp(text)}\n                styles={styles.inputStyle}\n            /> \n              <TextInput \n                label='Directions'\n                value={directions}\n                mode=\"outlined\"\n                multiline={true}\n                numberOfLines={4}\n                theme={theme}\n                onChangeText={text => setDirections(text)}\n                styles={styles.inputStyle}\n            /> \n            <TextInput \n                label='Creator'\n                value={creator}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setCreator(text)}\n                styles={styles.inputStyle}\n            /> \n            <Button \n                style={styles.inputStyle}\n                icon=\"content-save\"\n                mode='contained'\n                theme={theme}\n                onPress={() => submitData()}\n            >\n                Save Recipe\n            </Button>\n        </View>\n    )\n}\nconst theme = {\n    colors: {\n        primary: '#5D0C1D'\n    }\n}\n\nexport default CreateRecipe;","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#5D0C1D',\n        flex: 1,\n    },\n    inputStyle: {\n        margin: 5,\n    }\n})\n\nexport default styles;","import React, { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport styles from './styles';\nimport { Button, TextInput } from 'react-native-paper';\nimport StyledButton from '../StyledButton';\n\nconst EditRecipe = ({route, navigation}) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [img, setImg] = useState('');\n    const [servings, setServings] = useState('');\n    const [creator, setCreator] = useState('');\n    const [prep, setPrep] = useState('');\n    const [cook, setCook] = useState('');\n    const [temp, setTemp] = useState('');\n    const [recipe, setRecipe] =useState({});\n\n\n    \n    const id = route.params.id;\n    //For ios and web testing\n    // const url = 'http://127.0.0.1:3010/recipe/';\n    // for android testing\n    const url = 'http://10.0.2.2:3010/recipe/'\n\n    const escapePage = () => {\n        navigation.navigate('Feed');\n    };\n\n    const fetchRecipe = async () => {\n        const body = JSON.stringify({\n            title: title,\n            description: description,\n            img: img,\n            servings: servings,\n            creator: creator,\n            prep: prep,\n            cook: cook,\n            temp, temp,\n        \n        })\n        try {\n            const res = await fetch (\n                `${url}${id}`\n            );\n            const data = await res.json();\n            setRecipe(data)\n        } catch (err) {\n            console.log(err)\n        }\n    };\n    useEffect(() => {\n        fetchRecipe();\n    }, []);\n\n    const submitData = async (event) => {\n        const body = JSON.stringify({\n            title: title,\n            description: description,\n            img: img,\n            servings: servings,\n            creator: creator,\n            prep: prep,\n            cook: cook,\n            temp, temp,\n        \n        })\n        try {\n            const response = await fetch(\n                `${url}${id}`, \n                {\n                    method: 'PUT',\n                    headers: {\n                        'Content-type': 'application/json'\n                    },\n                    body\n                })\n            const data = await response.json();\n            await escapePage();\n        } catch (error) {\n            console.log(error)\n        }\n    };\n    const deleteRecipe = async () => {\n        try {\n          const response = await fetch(`${url}${id}`, {\n            method: \"DELETE\",\n            headers: {\n              \"Content-type\": \"application/json\",\n            },\n          });\n          const data = await response.json();\n        } catch (error) {\n          console.log(error);\n        }\n        // props.history.push('/')\n      };\n\n    return (\n        <View style={styles.container}>\n            <TextInput \n                label='Recipe Name'\n                value={title}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setTitle(text)}\n                styles={styles.inputStyle}\n            />\n            <TextInput \n                label='Short Description'\n                value={description}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setDescription(text)}\n                styles={styles.inputStyle}\n            /> \n            <TextInput \n                label='Image URL'\n                value={img}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setImg(text)}\n                styles={styles.inputStyle}\n            /> \n            <TextInput \n                label='Number of Servings'\n                value={servings}\n                mode=\"outlined\"\n                theme={theme}\n                keyboardType=\"number-pad\"\n                onChangeText={text => setServings(text)}\n                styles={styles.inputStyle}\n            /> \n            <TextInput \n                label='Creator'\n                value={creator}\n                mode=\"outlined\"\n                theme={theme}\n                onChangeText={text => setCreator(text)}\n                styles={styles.inputStyle}\n            /> \n            <StyledButton \n                style={styles.button}\n                type='xxx'\n                onPress={() => submitData()}\n                content=\"Update Recipe\"\n            />\n            <StyledButton \n                style={styles.button}\n                type='xxx'\n                onPress={() => deleteRecipe()}\n                content=\"Delete Recipe\"\n            />\n        </View>\n    )\n};\nconst theme = {\n    colors: {\n        primary: '#5D0C1D'\n    }\n};\n\n\nexport default EditRecipe;","import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#5D0C1D',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        padding: 10,\n        margin: 0,\n        flex:1\n    },\n    card: {\n        width: '90%',\n    },\n    logo: {\n        width: '85%',\n    },\n    title: {\n        color: '#f2a22c',\n        textAlign: 'center',\n        fontWeight: '600',\n        fontSize: 25,\n        padding: 10,\n    },\n    subtitle: {\n        color: '#f2a22c',\n    },\n    text: {\n        color: '#f2a22c',\n        textAlign: 'center',\n    },\n    image: {\n        alignSelf: 'center',\n        height: '80%' | 250,\n        width:  '80%',\n        resizeMode: 'center'\n    },\n})\n\nexport default styles;","\nimport React, { useEffect, useState } from 'react';\nimport { Text, View, Image} from 'react-native';\nimport styles from './styles';\nimport StyledButton from '../StyledButton';\nimport { Card, Title, Paragraph } from 'react-native-paper';\n\nconst url = 'http://127.0.0.1:3010/recipe/';\n\nexport default function Show({ navigation, route }) {\n    const id = route.params.id;\n    const [recipe, setRecipe] = useState({})\n\n    const fetchRecipe = async () => {\n        try {\n            const res = await fetch (\n                `${url}${id}`\n            );\n            const data = await res.json();\n            setRecipe(data)\n        } catch (err) {\n            console.log(err)\n        }\n    };\n    \n    useEffect(() => {\n        fetchRecipe();\n    }, []);\n\n    return (\n        <View style={styles.container}>\n            <Card style={styles.card} >\n                <Card.Title\n                    title={recipe.title}\n                    titleStyle={{textTransform: 'capitalize', fontSize: 20}}\n                    subtitle={recipe.description}\n                    subtitleStyle={{fontSize: 14}}\n                    subtitleNumberOfLines={3}\n                /> \n                <Card.Content style={styles.content}>\n                    <Paragraph>\n                        Prep time: {recipe.prep}\n                    </Paragraph>\n                    <Paragraph>\n                        Cook Time: {recipe.cook}\n                    </Paragraph>\n                    <Paragraph>\n                        Number of Servings: {recipe.servings}\n                    </Paragraph>\n                    <Paragraph>\n                    </Paragraph>\n                    <StyledButton \n                        type=\"xxx\"\n                        onPress={() => {navigation.navigate('EditRecipe', { id: recipe._id})}}\n                        content=\"Edit Recipe\"\n                    />\n                    <StyledButton \n                        type=\"xxx\"\n                        onPress={() => navigation.goBack()}\n                        content=\"Back to Feed\"\n                    />\n                </Card.Content>\n            </Card>       \n        </View>\n    )\n};\n","import 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Feed from './components/Feed';\nimport Register from './components/Register';\nimport CreateRecipe from './components/CreateRecipe';\nimport EditRecipe from './components/EditRecipe';\nimport Show from './components/RecipeShow';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n\nconst Stack = createStackNavigator();\n\n\nexport default function App() {\n\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator \n        initialRouteName='Scrumptious'\n      >\n        <Stack.Screen \n          name='Scrumptious' \n          component={Home} \n        />\n        <Stack.Screen \n          name='Feed' \n          component={Feed} \n        />\n        {/* Can possibly use this to build the logged in users favorites feed */}\n        {/* <Stack.Screen name=\"Home\">\n            {props => <HomeScreen {...props} extraData={someData} />}\n        </Stack.Screen> */}\n        <Stack.Screen \n          name='Login' \n          component={Login} \n        />\n        <Stack.Screen \n          name='Register' \n          component={Register} \n        />\n        <Stack.Screen \n          name='CreateRecipe' \n          component={CreateRecipe} \n        />\n        <Stack.Screen \n          name='EditRecipe' \n          component={EditRecipe} \n        />\n        <Stack.Screen\n          name='ViewRecipe'\n          component={Show}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n};\n\n"],"sourceRoot":""}